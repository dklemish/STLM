cyl.corr(1, 1)
cyl.corr(2, 1)
cyl.corr(1.99, 1)
cyl.corr(0.01, 1)
cyl.corr(c(0.02, 0.04), 2)
plot(seq(0, 2, by=0.01), cyl.corr(seq(0,2,by=0.01), 2))
E1_wrap(5)
pgamma(5, 1e-9, 1)/1e-9
?pgamma
pgamma(5, 1e-9, 1, lower.tail = FALSE)/1e-9
pgamma(2, 1e-9, 1, lower.tail = FALSE)/1e-9
E1_wrap(2)
library(microbenchmark)
microbenchmark(E1_wrap(2))
microbenchmark(pgamma(2, 1e-9, 1, lower.tail = FALSE)/1e-9)
library(STLM)
drawGammaRF(b=10, eps=0.1)
library(STLM)
drawGammaRF(b=10, eps=0.1)
library(STLM)
E1
drawGammaRF(b=10, eps=0.1)
E1(1)
library(STLM)
drawGammaRF(b=10, eps=0.1)
E1
E1(0.1)
E1(1)
library(STLM)
drawGammaRF(b=10, eps=0.1)
E1(1)
library(STLM)
drawGammaRF(b=10, eps=0.1)
drawGammaRF(b=10, eps=0.1)
drawGammaRF(b=10, eps=0.1)
drawGammaRF(b=100, eps=0.1)
drawGammaRF(b=1, eps=0.1)
E1(0.1)
microbenchmark(drawGammaRF(b=1, eps=0.1))
microbenchmark(E1(0.1))
library("Rcpp", lib.loc="~/R/x86_64-redhat-linux-gnu-library/3.3")
remove.packages("Rcpp", lib="~/R/x86_64-redhat-linux-gnu-library/3.3")
install.packages("Rcpp")
remove.packages("RcppEigen", lib="~/R/x86_64-redhat-linux-gnu-library/3.3")
install.packages("RcppEigen")
library(STLM)
drawGammaRF(X=1:10, a=10, b=10, eps=0.1)
library(STLM)
drawGammaRF(X=1:10, a=10, b=10, eps=0.1)
drawGammaRF(X=matrix(1:10), a=10, b=10, eps=0.1)
drawGammaRF(X=matrix(1:10), a=10, b=1, eps=0.1)
E1(0.1)
drawGammaRF(X=matrix(1:10), a=1, b=1, eps=0.1)
E1(0.1)
pgamma(0.1, 1e-9, lower=FALSE)/1e-9
library(STLM)
drawGammaRF(X=matrix(1:10), a=1, b=1, eps=0.1)
library(STLM)
drawGammaRF(X=matrix(1:10), a=1, b=1, eps=0.1)
pgamma(1, 1e-9, lower=FALSE)/1e-9
library(STLM)
drawGammaRF(X=matrix(1:10), a=1, b=1, eps=0.1)
library(STLM)
drawGammaRF(X=matrix(1:10), a=1, b=1, eps=0.1)
pgamma(1, 1e-9, lower=FALSE)/1e-9
pgamma(.1, 1e-9, lower=FALSE)/1e-9
library(STLM)
E1inv(5, 1e-3)
qgamma(5*1e-9, 1e-9, lower=F)
E1inv(5, 1e-5)
E1inv(5, 1e-6)
qgamma(5*1e-9, 1e-9, lower=F)
library(microbenchmark)
microbenchmark(E1inv(5, 1e-6))
qgamma(6*1e-9, 1e-9, lower=F)
E1inv(6, 1e-6)
E1inv(6, 1e-9)
E1inv(7, 1e-9)
qgamma(7*1e-9, 1e-9, lower=F)
?qgamma
library(STLM)
E1inv(7, 1e-9)
qgamma(7*1e-9, 1e-9, lower=F)
E1inv(7, 1e-12)
E1inv(7, 1e-15)
E1inv(7, 1e-30)
E1inv(10, 1e-30)
qgamma(10*1e-9, 1e-9, lower=F)
qgamma(30*1e-9, 1e-9, lower=F)
E1inv(30, 1e-30)
E1inv(50, 1e-30)
qgamma(50*1e-9, 1e-9, lower=F)
library(STLM)
microbenchmark(qgamma(50*1e-9, 1e-9, lower=F))
microbenchmark(E1inv(50, 1e-30))
microbenchmark(E1inv(50, 1e-30))
microbenchmark(E1inv(50, 1e-30), 1000)
?microbenchmark
microbenchmark(E1inv(50, 1e-30), times=1000)
microbenchmark(qgamma(50*1e-9, 1e-9, lower=F), times=1000)
microbenchmark(E1(1), times=1000)
microbenchmark(pgamma(1, 1e-9, lower=F)/1e-9, times=1000)
library(STLM)
microbenchmark(E1(1), times=1000)
microbenchmark(pgamma(1, 1e-9, lower=F)/1e-9, times=1000)
microbenchmark(E1(1), times=1000)
microbenchmark(pgamma(1, 1e-9, lower=F)/1e-9, times=1000)
library(STLM)
microbenchmark(E1(1), times=1000)
microbenchmark(E1v2(1), times=1000)
microbenchmark(E1(1), times=1000)
microbenchmark(E1v2(1), times=1000)
microbenchmark(E1(1), times=1000)
microbenchmark(E1v2(1), times=1000)
microbenchmark(E1(1), times=10000)
microbenchmark(E1v2(1), times=10000)
microbenchmark(E1(1), times=10000)
microbenchmark(E1v2(1), times=10000)
microbenchmark(E1(1), times=100000)
microbenchmark(E1(1), times=1000000)
microbenchmark(E1(1), times=1000000)
microbenchmark(E1v2(1), times=1000000)
library(STLM)
microbenchmark(E1(1), times=10000)
microbenchmark(E1inv(0.2, 1e-6, FALSE), times=10000)
microbenchmark(qgamma(1e-9*0.2, 1e-9, lower=FALSE), times=10000)
microbenchmark(E1inv(0.2, 1e-6, FALSE), times=10000)
microbenchmark(qgamma(1e-9*0.2, 1e-9, lower=FALSE), times=10000)
microbenchmark(E1inv(0.2, 1e-6, FALSE), times=100000)
microbenchmark(qgamma(1e-9*0.2, 1e-9, lower=FALSE), times=100000)
microbenchmark(E1inv(0.2, 1e-6, FALSE), times=100000)
microbenchmark(qgamma(1e-9*0.2, 1e-9, lower=FALSE), times=100000)
microbenchmark(E1inv(0.2, 1e-6, FALSE), times=1000000)
microbenchmark(qgamma(1e-9*0.2, 1e-9, lower=FALSE), times=1000000)
microbenchmark(E1inv(0.2, 1e-6, TRUE), times=1000000)
library(STLM)
drawGamma(50, 1, 1, 1e-6, 1*E1(1*1e-6))
library(STLM)
drawGamma(50, 1, 1, 1e-6, 1*E1(1*1e-6))
microbenchmark(drawGamma(50, 1, 1, 1e-6, 1*E1(1*1e-6)))
microbenchmark(rgamma(1, 1, 1))
drawGamma(50, 10, 1, 1e-6, 1*E1(1*1e-6))
drawGamma(50, 100, 1, 1e-6, 1*E1(1*1e-6))
drawGamma(50, 100, 0.1, 1e-6, 1*E1(1*1e-6))
drawGamma(50, 100, 10, 1e-6, 1*E1(1*1e-6))
drawGamma(50, 100, 100, 1e-6, 1*E1(1*1e-6))
sum(drawGamma(50, 100, 100, 1e-6, 1*E1(1*1e-6)))
sum(drawGamma(50, 100, 100, 1e-6, 1*E1(1*1e-6)))
sum(drawGamma(50, 100, 100, 1e-6, 1*E1(1*1e-6)))
sum(drawGamma(50, 100, 100, 1e-6, 1*E1(1*1e-6)))
sum(drawGamma(50, 100, 100, 1e-6, 1*E1(1*1e-6)))
sum(drawGamma(50, 100, 0.1, 1e-6, 1*E1(1*1e-6)))
sum(drawGamma(50, 100, 0.1, 1e-6, 1*E1(1*1e-6)))
sum(drawGamma(50, 100, 0.1, 1e-6, 1*E1(1*1e-6)))
rgamma(1, 100, 0.1)
library(STLM)
drawGamma(50, 100, 0.1, 1e-6, 1*E1(1*1e-6))
drawGamma(50, 100, 0.1, 1e-6, 100*E1(0.1*1e-6))
sum(drawGamma(50, 100, 0.1, 1e-6, 100*E1(0.1*1e-6)))
sum(drawGamma(50, 100, 0.1, 1e-6, 100*E1(0.1*1e-6)))
sum(drawGamma(50, 100, 0.1, 1e-6, 100*E1(0.1*1e-6)))
sum(drawGamma(50, 100, 0.1, 1e-5, 100*E1(0.1*1e-5)))
sum(drawGamma(50, 100, 0.1, 1e-5, 100*E1(0.1*1e-5)))
sum(drawGamma(50, 100, 0.1, 1e-5, 100*E1(0.1*1e-5)))
sum(drawGamma(50, 100, 0.1, 1e-5, 100*E1(0.1*1e-5)))
sum(drawGamma(50, 100, 0.1, 1e-5, 100*E1(0.1*1e-5)))
sum(drawGamma(50, 100, 0.1, 1e-5, 100*E1(0.1*1e-5)))
sum(drawGamma(50, 100, 0.1, 1e-5, 100*E1(0.1*1e-5)))
sum(drawGamma(50, 100, 0.1, 1e-5, 100*E1(0.1*1e-5)))
microbenchmark(drawGamma(50, 1, 1, 1e-5, 1*E1(1*1e-5)))
microbenchmark(drawGamma(20, 1, 1, 1e-5, 1*E1(1*1e-5)))
microbenchmark(drawGamma(10, 1, 1, 1e-5, 1*E1(1*1e-5)))
microbenchmark(drawGamma(5, 1, 1, 1e-5, 1*E1(1*1e-5)))
microbenchmark(drawGamma(5, 1, 1, 1e-5, 1*E1(1*1e-5)))
microbenchmark(drawGamma(5, 1, 1, 1e-5, 1*E1(1*1e-5)), times=10000)
microbenchmark(rgamma(1, 1, 1))
microbenchmark(sum(drawGamma(5, 1, 1, 1e-5, 1*E1(1*1e-5)), times=10000))
microbenchmark(rgamma(1, 1, 1), times=10000)
test <- rep(0, 5000)
for(i in 1:5000){
test[i] <- sum(drawGamma(50, 5, 0.5, 1e-5, 5*E1(0.5*1e-5)))
}
hist(test, freq=FALSE)
lines(seq(0.1, 35, by=0.1), dgamma(seq(0.1, 35, by=0.1), 5, 0.5), col="red")
hist(test, freq=FALSE, breaks=100)
lines(seq(0.1, 35, by=0.1), dgamma(seq(0.1, 35, by=0.1), 5, 0.5), col="red")
library(STLM)
drawGamma(50, 1, 1, 1e-3)
sum(drawGamma(50, 1, 1, 1e-3))
for(i in 1:5000){
test[i] <- sum(drawGamma(50, 5, 0.5, 1e-2)))
}
for(i in 1:5000){
test[i] <- sum(drawGamma(50, 5, 0.5, 1e-2))
}
test
hist(test, freq=FALSE, breaks=100)
lines(seq(0.1, 35, by=0.1), dgamma(seq(0.1, 35, by=0.1), 5, 0.5), col="red")
test <- rep(0, 25000)
for(i in 1:25000){
test[i] <- sum(drawGamma(50, 5, 0.5, 1e-2))
}
hist(test, freq=FALSE, breaks=100)
lines(seq(0.1, 35, by=0.1), dgamma(seq(0.1, 35, by=0.1), 5, 0.5), col="red")
microbenchmark(sum(drawGamma(50, 5, 0.5, 1e-2)))
microbenchmark(sum(drawGamma(50, 5, 0.5, 1e-2)), times=1000)
microbenchmark(sum(drawGamma(50, 5, 0.5, 1e-3)), times=1000)
microbenchmark(sum(drawGamma(50, 5, 0.5, 1e-4)), times=1000)
microbenchmark(sum(drawGamma(50, 5, 0.5, 1e-5)), times=1000)
microbenchmark(sum(drawGamma(50, 5, 0.5, 1e-6)), times=1000)
for(i in 1:25000){
test[i] <- sum(drawGamma(50, 5, 0.5, 1e-6))
}
hist(test, freq=FALSE, breaks=100)
lines(seq(0.1, 35, by=0.1), dgamma(seq(0.1, 35, by=0.1), 5, 0.5), col="red")
library(STLM)
E1(2)
E1(3)
E1(10)
E1(1)
E1(0.1)
E1(0.001)
E1(0.00001)
E1(0.000000001)
E1(1e-12)
E1(1e-15)
E1(1e-18)
E1(1e-24)
E1(1e-36)
E1(1e-100)
E1inv(200, 1e-3, FALSE)
E1inv(2229.68, 1e-6, FALSE)
E1inv(229.68, 1e-6, FALSE)
E1inv(229.68, 1e-8, FALSE)
E1inv(1, 1e-5, FALSE)
E1(0.264737)
drawGamma(20, 10, 1, 1e-5)
sum(drawGamma(20, 10, 1, 1e-5))
sum(drawGamma(20, 10, 1, 1e-5))
sum(drawGamma(20, 10, 1, 1e-5))
sum(drawGamma(20, 10, 1, 1e-5))
sum(drawGamma(20, 10, 1, 1e-5))
sum(drawGamma(20, 10, 1, 1e-5))
sum(drawGamma(20, 10, 1, 1e-5))
library(microbenchmark)
microbenchmark(sum(drawGamma(20, 10, 1, 1e-5)))
microbenchmark(rgamma(1,10,1))
microbenchmark(sum(drawGamma(100, 10, 1, 1e-5)))
microbenchmark(sum(drawGamma(10, 10, 1, 1e-5)))
microbenchmark(sum(drawGamma(110, 10, 1, 1e-5)))
microbenchmark(sum(drawGamma(20, 10, 1, 1e-5)))
microbenchmark(sum(drawGamma(20, 10, 1, 1e-4)))
microbenchmark(sum(drawGamma(20, 100, 1, 1e-4)))
microbenchmark(sum(drawGamma(20, 100, 10, 1e-4)))
microbenchmark(sum(drawGamma(20, 100, 100, 1e-4)))
microbenchmark(sum(rgamma(1, 100, 100))
)
library(STLM)
drawGammaRF(matrix(1:10, ncol=1), 2, 2, 1e-5, 1, 1)
drawGammaRF(matrix(1:10, ncol=1), 2, 2, 1e-5, 1, 1)
E1(2e-5)
2*E1(2e-5)
round(2*E1(2e-5)*10)
round(2*E1(2e-5)*10)*10
library(STLM)
drawGammaRF(matrix(1:10, ncol=1), 2, 2, 1e-5, 1, 1)
library(STLM)
drawGammaRF(matrix(1:10, ncol=1), 2, 2, 1e-5, 1, 1)
test <- drawGammaRF(matrix(1:10, ncol=1), 2, 2, 1e-5, 1, 1)
dim(test)
microbenchmark(drawGammaRF(matrix(1:10, ncol=1), 2, 2, 1e-5, 1, 1))
drawGamma(10, 2, 2, 1e-5)
drawGamma(10, 3, 3, 1e-5)
drawGamma(10, 4, 4, 1e-5)
drawGamma(10, 5, 5, 1e-5)
drawGamma(10, 6, 6, 1e-5)
drawGamma(10, 6, 6, 1e-4)
library(STLM)
drawGamma(10, 6, 6, 1e-4)
drawGamma(10, 6, 6, 1e-4)
drawGamma(10, 6, 6, 1e-4)
drawGamma(10, 6, 6, 1e-4)
drawGamma(10, 6, 6, 1e-4)
drawGamma(10, 6, 6, 1e-4)
drawGamma(10, 6, 6, 1e-4)
drawGamma(10, 6, 6, 1e-4)
drawGamma(10, 6, 6, 1e-4)
drawGamma(10, 1, 1, 1e-4)
drawGamma(10, .1, .1, 1e-4)
drawGamma(10, .1, .1, 1e-4)
drawGamma(10, .1, .1, 1e-4)
test <- rep(0, 10000)
for(i in 1:10000){
test[i] <- sum(drawGamma(10, 0.1, 0.1, 1e-4))
}
summary(test)
hist(test, freq=FALSE, breaks=100)
hist(test, freq=FALSE, breaks=100, xlim=c(0, 3))
hist(test, freq=FALSE, breaks=1000, xlim=c(0, 3))
hist(test, freq=FALSE, breaks=1000, xlim=c(0, 1))
lines(seq(0, 1, by=0.005), dgamma(seq(0, 1, by=0.005), 0.1, 0.1), col="red")
hist(test, freq=FALSE, breaks=10000, xlim=c(0, 1))
lines(seq(0, 1, by=0.005), dgamma(seq(0, 1, by=0.005), 0.1, 0.1), col="red")
library(STLM)
drawGammaRF(matrix(1:10, ncol=1), 2, 2, 1e-5, 1, 1)
library(STLM)
drawGammaRF(matrix(1:10, ncol=1), 2, 2, 1e-5, 1, 1)
drawGammaRF(matrix(1:2, ncol=1), 2, 2, 1e-5, 1, 1)
library(STLM)
drawGammaRF(matrix(1:2, ncol=1), 2, 2, 1e-5, 1, 1)
drawGammaRF(matrix(1:10, ncol=1), 2, 2, 1e-5, 1, 1)
library(STLM)
drawGammaRF(matrix(1:10, ncol=1), 2, 2, 1e-5, 1, 1)
library(STLM)
drawGammaRF(matrix(1:10, ncol=1), 2, 2, 1e-5, 1, 1)
library(STLM)
drawGammaRF(matrix(1:10, ncol=1), 2, 2, 1e-5, 1, 1)
drawGammaRF(matrix(1:10, ncol=2), 2, 2, 1e-5, 1, 1)
library(STLM)
drawGammaRF(matrix(1:10, ncol=2), 2, 2, 1e-5, 1, 1)
library(STLM)
drawGammaRF(matrix(1:10, ncol=2), 2, 2, 1e-5, 1, 1)
library(STLM)
drawGammaRF(matrix(1:10, ncol=2), 2, 2, 1e-5, 1, 1)
library(STLM)
drawGammaRF(matrix(1:10, ncol=2), 2, 2, 1e-5, 1, 1)
drawGammaRF(1:10, 2, 2, 1e-5)
library(STLM)
drawGammaRF_R(1:10, 2, 2, 1e-5)
drawGammaRF_R(matrix(1:10, nrow=1), 2, 2, 1e-5)
drawGammaRF_R(matrix(1:10, ncol=1), 2, 2, 1e-5)
drawGammaRF_R(matrix(1:10, ncol=2), 2, 2, 1e-5)
drawGammaRF_R(matrix(1:10, ncol=3), 2, 2, 1e-5)
drawGammaRF_R(matrix(1:10, ncol=3), 5, 2, 1e-5)
drawGammaRF_R(matrix(1:10, ncol=5), 2, 2, 1e-5)
dist(matrix(1:10, ncol=2)
)
?dist
?sym
typeof(dist(matrix(1:10, ncol=2)))
dist(matrix(1:10, ncol=2))[1,1]
dist(matrix(1:10, ncol=2))[1]
dist(matrix(1:10, ncol=2))[2]
dist(matrix(1:10, ncol=2))[3]
dist(matrix(1:10, ncol=2))[4]
dist(matrix(1:10, ncol=2))[5]
as.matrix(dist(matrix(1:10, ncol=2)))
junk <- as.matrix(dist(matrix(1:10, ncol=2)))
diag(junk) <- Inf
junk
junk < 3
junk <- as.matrix(dist(matrix(1:10, ncol=1)))
junk
junk <- as.matrix(dist(matrix(1:100, ncol=2)))
junk
matrix(1:100, ncol=2)
matrix(1:100, ncol=2)
junk
sqrt(49^2+49^2)
junk <- as.matrix(dist(matrix(rnorm(10, 0, 2), ncol=2)))
junk
junk <- matrix(rnorm(10, 0, 2), ncol=2)
junk
dist(junk)
as.matrix(dist(junk))
library(STLM)
drawGammaRF_R(matrix(1:10, ncol=1), 2, 2, 1e-5)
drawGammaRF(matrix(1:10, ncol=1), 2, 2, 1e-5)
dist(1:10)
dist(1:10)[[1]]
dist(1:10)[[2]]
dist(1:10)[1]
dist(1:10)[2]
c(dist(1:10))
library(STLM)
drawGammaRF(matrix(1:10, ncol=1), 2, 2, 1e-5)
library(STLM)
drawGammaRF(matrix(1:10, ncol=1), 2, 2, 1e-5)
library(STLM)
drawGammaRF(matrix(1:10, ncol=1), 2, 2, 1e-5)
library(STLM)
library(STLM)
drawGammaRF(matrix(1:10, ncol=1), 2, 2, 1e-5)
library(STLM)
drawGammaRF(matrix(1:10, ncol=1), 2, 2, 1e-5)
junk <- drawGammaRF(matrix(1:10, ncol=1), 2, 2, 1e-5)
junk
library(STLM)
junk <- drawGammaRF(matrix(1:10, ncol=1), 2, 2, 1e-5)
library(STLM)
junk <- drawGammaRF(matrix(1:10, ncol=1), 2, 2, 1e-5)
library(STLM)
junk <- drawGammaRF(matrix(1:10, ncol=1), 2, 2, 1e-5)
library(STLM)
junk <- drawGammaRF(matrix(1:10, ncol=1), 2, 2, 1e-5)
junk
library(STLM)
junk <- drawGammaRF(matrix(1:10, ncol=1), 2, 2, 1e-5)
junk
library(STLM)
junk <- drawGammaRF(matrix(1:10, ncol=1), 2, 2, 1e-5, R=2)
head(junk)
head(junk, 40)
junk <- drawGammaRF(matrix(1:10, ncol=1), 2, 2, 1e-5, R=2)
head(junk, 40)
library(STLM)
head(junk, 40)
junk <- drawGammaRF(matrix(1:10, ncol=1), 2, 2, 1e-5, R=2)
library(STLM)
junk <- drawGammaRF(matrix(1:10, ncol=1), 2, 2, 1e-5, R=2)
library(STLM)
junk <- drawGammaRF(matrix(1:10, ncol=1), 2, 2, 1e-5, R=2)
junk
junk <- drawGammaRF(matrix(1:10, ncol=1), 2, 2, 1e-5, R=2)
head(junk, 20)
library(STLM)
head(junk, 20)
junk <- drawGammaRF(matrix(1:10, ncol=1), 2, 2, 1e-5, R=2)
head(junk, 20)
hist(junk[1:20, 2])
junk <- drawGammaRF(matrix(1:10, ncol=1), 2, 2, 1e-5, R=1)
head(junk,20)
hist(junk[1:20, 2])
junk <- drawGammaRF(matrix(1:10, ncol=1), 2, 2, 1e-5, R=0.25)
hist(junk[1:20, 2])
hist(junk[1:20, 2], breaks=50)
junk <- drawGammaRF(matrix(1:10, ncol=1), 2, 2, 1e-5, R=0.25)
hist(junk[1:20, 2], breaks=50)
library(STLM)
junk <- drawGammaRF(matrix(1:10, ncol=1), 2, 2, 1e-5, R=0.25)
junk
junk[,1:14]
dim(junk)
junk[1:14,]
hist(junk[1:14, 2], breaks=50)
library("Rcpp", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
library("RcppArmadillo", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
library("RcppEigen", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
install.packages(c("Rcpp", "RcppArmadillo", "RcppEigen", "reshape2", "rstan", "rstantools", "StanHeaders"))
library(STLM)
junk <- drawGammaRF(matrix(1:10, ncol=1), 2, 2, 1e-5, R=0.25)
junk
plot(junk[,2], junk[,1])
plot(junk[1:222,2], junk[1:222,1])
junk <- drawGammaRF(matrix(1:10, ncol=1), 2, 2, 1e-5, R=2)
junk
plot(junk[1:64,2], junk[1:64,1])
junk <- drawGammaRF(matrix(seq(1,10, by=0.01), ncol=1), 2, 2, 1e-5, R=2)
junk
plot(junk[1:84,2], junk[1:84,1])
junk <- drawGammaRF(matrix(seq(1,10, by=0.01), ncol=1), 2, 0.1, 1e-5, R=2)
junk
plot(junk[1:71,2], junk[1:71,1])
junk <- junk[1:71,]
junk
junk <- drawGammaRF(matrix(seq(1,10, by=0.01), ncol=1), 2, 0.1, 1e-5, R=20)
junk
plot(junk[1:35, 2], junk[1:35,1])
library(STLM)
library(STLM)
library(STLM)
library(STLM)
library(STLM)
library(STLM)
library(STLM)
library(STLM)
drawGammaRF(matrix(seq(1,10, by=0.01), ncol=1), 2, 0.1, 1e-5, R=20)
plot(seq(1,10, by=0.01), junk)
junk <- drawGammaRF(matrix(seq(1,10, by=0.01), ncol=1), 2, 0.1, 1e-5, R=20)
plot(seq(1,10, by=0.01), junk)
junk <- matrix(0, nrow=5000, ncol=100)
X <- matrix(1:100, ncol=1)
for(i in 1:5000){
X[i, ] <- drawGammaRF(X, 2, 0.5, 1e-3, R=10, sd=6)
}
drawGammaRF(X, 2, 0.5, 1e-3, R=10, sd=6)
X[i,]
X
junk <- matrix(0, nrow=5000, ncol=100)
X <- matrix(1:100, ncol=1)
for(i in 1:5000){
junk[i, ] <- drawGammaRF(X, 2, 0.5, 1e-3, R=10, sd=6)
}
plot(X, junk[1,])
plot(X, junk[2,])
plot(X, junk[3,])
X <- matrix(seq(1,100, by=0.5), ncol=1)
X <- matrix(seq(0,100, by=0.5), ncol=1)
junk <- matrix(0, nrow=10000, ncol=199)
X <- matrix(seq(1,100, by=0.5), ncol=1)
for(i in 1:10000){
junk[i, ] <- drawGammaRF(X, 2, 0.5, 1e-3, R=10, sd=i)
}
junk[1,]
plot(X, junk[1,])
plot(X, junk[2,])
plot(X, junk[3,])
hist(junk, breaks=100, freq=FALSE)
lines(seq(0.01, 30, by=0.01), dgamma(seq(0.01, 30, by=0.01), 2, 0.5), col="red")
cov(junk[,1], junk[,2])
cor(junk[,1], junk[,2])
cyl.corr(0.5, 10)
cor(junk[,2], junk[,3])
cor(junk[,3], junk[,4])
cor(junk[,4], junk[,5])
cor(junk[,99], junk[,100])
cor(junk[,198], junk[,199])
cyl.corr(1, 10)
cor(junk[,1], junk[,3])
cor(junk[,2], junk[,4])
cor(junk[,3], junk[,5])
cor(junk[,4], junk[,6])
